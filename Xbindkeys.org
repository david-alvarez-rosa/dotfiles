#+TITLE: Xbindkeys Configuration
#+LANGUAGE: en
#+AUTHOR: David √Ålvarez Rosa
#+EMAIL: david@alvarezrosa.com
#+DESCRIPTION: My personal Xbindkeys configuration file.
#+PROPERTY: header-args :tangle ~/.config/xbindkeys/config


Xbindkeys is a program that allows to bind commands to certain keys or key
combinations on the keyboard. Xbindkeys works with multimedia keys and is
independent of the window manager and desktop environment.


* Volume
Commands for controlling the volume. This binds laptop =Fn= keys for adjust
audio, such as volume (increase, drecrease) and toggle mute status.

Commands for increasing and decreasing the volume have an step size of 5, but
using =Shift= modifier on this keys will change step size to 10 and using
=Ctrl= modifier to 1.
#+begin_src conf
  "pamixer -i 5"
    XF86AudioRaiseVolume
  "pamixer -i 10"
    Shift + XF86AudioRaiseVolume
  "pamixer -i 1"
    Control + XF86AudioRaiseVolume

  "pamixer -d 5"
    XF86AudioLowerVolume
  "pamixer -d 10"
    Shift + XF86AudioLowerVolume
  "pamixer -d 1"
    Control + XF86AudioLowerVolume
#+end_src

Remember that is possible to allow volume boost (volume above 100%), from the
command line with =pamixer -i --allow-boost <arg>=.

Toggle mute status.
#+begin_src conf
  "pamixer -t"
    XF86AudioMute
#+end_src

* Backlight
Configuration both for display brightness and display.

** Brightness
Due to incompatibility problems, I am using Acpilight (a backward-compatible
xbacklight replacement) for setting the display brightness. This programm uses
the ACPI interface and can control both display and keyboard backlight
uniformly on either X11, the console or Wayland. Personally I am just using
this for display brightness in X.

Similarly to the volume control bindings, I am providing here functionality for
increasing and decreasing brightness with =Fn= laptop keys with a step size
of 5. If this keys are combined with =Shift= modifier the step size changes to
10, and when combined with =Ctrl= to 1.

#+begin_src conf
  "xbacklight -inc 5"
    XF86MonBrightnessUp
  "xbacklight -inc 10"
    Shift + XF86MonBrightnessUp
  "xbacklight -inc 1"
    Control + XF86MonBrightnessUp

  "xbacklight -dec 5"
    XF86MonBrightnessDown
  "xbacklight -dec 10"
    Shift + XF86MonBrightnessDown
  "xbacklight -dec 1"
    Control + XF86MonBrightnessDown
#+end_src

** Display
Switching off the backlight can be useful to conserve battery energy. I have
bind this to the =F4= key, because why not.
#+begin_src conf
  "xset dpms force off"
    XF86Display
#+end_src

This same display =Fn= laptop key is also bound with the =Ctrl= and =Shift=
modifiers for toggling graphical output and volume to a external monitor (very
useful whenever I connect laptop to a TV).
#+begin_src conf
  "xrandr --output HDMI-1 --auto --output eDP-1 --off; pactl set-card-profile 0 output:hdmi-stereo"
    Control + XF86Display
  "xrandr --output HDMI-1 --off --output eDP-1 --auto; pactl set-card-profile 0 output:hdmi-surround"
    Shift + XF86Display
#+end_src

* Music Player
For listening to music and other audio files I use, of course, the =mpd=
daemon. I set some basic binds for next/prev song and toggling between play and
pause status.
#+begin_src conf
  "mpc toggle"
    XF86AudioPlay
  "mpc prev"
    XF86AudioPrev
  "mpc next"
    XF86AudioNext
#+end_src

* Network Manager
Toggle wifi status: enabled/disabled. Wi-Fi status can be check in the command
line with the command =nmcli radio wifi=. I am using NetworkManager program
(originally developep by Red Hat) for network configuration (both wireless and
wired). For interacting with the daemon I use the command-line tool nmcli.
#+begin_src conf
  "[[ $(nmcli radio wifi) == 'enabled' ]] && nmcli radio wifi off || nmcli radio wifi on"
    XF86WLAN
#+end_src

** TODO Think about changing to this
:LOGBOOK:
- State "TODO"       from              [2021-09-02 Thu 08:40]
- State "TODO"       from              [2021-09-02 Thu 08:40]
:END:
This approach might be a better alternative (in general for all commands), but
this will only be needed if not using any status bar.
#+begin_src conf :tangle no
  "nmcli radio wifi off"
    XF86WLAN
  "nmcli radio wifi on"
    Control + XF86WLAN
#+end_src

* Touchpad
Any real Emacs user knows that touchpads are annoying. I set the laptop =Fn=
key for toggling between touchpad status: enabled/disabled.
#+begin_src conf :tangle no
  "if xinput list-props 'SynPS/2 Synaptics TouchPad' | grep 'Enabled'; then xinput disable 'SynPS/2 Synaptics TouchPad'; else xinput enable 'SynPS/2 Synaptics TouchPad'; fi"
#+end_src

Of course, take into account that the name for the touchpad must be changed
accordingly to the laptop, in my case it is called "SynPS/2 Synaptics
Touchpad". The touchpad name can be search with =xinput=.

*NOTE:* The key it's not working! Don't know why.

* Screen lock
Lock the screen using =slock= programm from Suckless, with =Super+l=.
#+begin_src conf
  "slock"
    Mod2+Mod4 + l
#+end_src
